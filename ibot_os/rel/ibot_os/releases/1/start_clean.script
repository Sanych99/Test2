%% script generated at {2015,4,27} {2,46,31}
{script,
    {"start_clean",[]},
    [{preLoaded,[]},
     {progress,preloaded},
     {path,["$ROOT/lib/kernel-3.1/ebin","$ROOT/lib/stdlib-2.3/ebin"]},
     {primLoad,[error_handler]},
     {kernel_load_completed},
     {progress,kernel_load_completed},
     {path,["$ROOT/lib/kernel-3.1/ebin"]},
     {primLoad,
         [application,application_controller,application_master,
          application_starter,auth,code,code_server,disk_log,disk_log_1,
          disk_log_server,disk_log_sup,dist_ac,dist_util,erl_boot_server,
          erl_ddll,erl_distribution,erl_epmd,erl_reply,error_logger,
          erts_debug,file,file_io_server,file_server,gen_sctp,gen_tcp,gen_udp,
          global,global_group,global_search,group,heart,hipe_unified_loader,
          inet,inet6_sctp,inet6_tcp,inet6_tcp_dist,inet6_udp,inet_config,
          inet_db,inet_dns,inet_gethost_native,inet_hosts,inet_parse,inet_res,
          inet_sctp,inet_tcp,inet_tcp_dist,inet_udp,kernel,kernel_config,net,
          net_adm,net_kernel,os,pg2,ram_file,rpc,seq_trace,standard_error,
          user,user_drv,user_sup,wrap_log_reader]},
     {path,["$ROOT/lib/stdlib-2.3/ebin"]},
     {primLoad,
         [array,base64,beam_lib,binary,c,calendar,dets,dets_server,dets_sup,
          dets_utils,dets_v8,dets_v9,dict,digraph,digraph_utils,edlin,
          edlin_expand,epp,erl_bits,erl_compile,erl_eval,erl_expand_records,
          erl_internal,erl_lint,erl_parse,erl_posix_msg,erl_pp,erl_scan,
          erl_tar,error_logger_file_h,error_logger_tty_h,escript,ets,
          eval_bits,file_sorter,filelib,filename,gb_sets,gb_trees,gen,
          gen_event,gen_fsm,gen_server,io,io_lib,io_lib_format,io_lib_fread,
          io_lib_pretty,lib,lists,log_mf_h,maps,math,ms_transform,orddict,
          ordsets,otp_internal,pg,pool,proc_lib,proplists,qlc,qlc_pt,queue,
          random,re,sets,shell,shell_default,slave,sofs,string,supervisor,
          supervisor_bridge,sys,timer,unicode,win32reg,zip]},
     {path,["$ROOT/lib/sasl-2.4.1/ebin"]},
     {primLoad,
         [alarm_handler,erlsrv,format_lib_supp,misc_supp,overload,rb,
          rb_format_supp,release_handler,release_handler_1,sasl,sasl_report,
          sasl_report_file_h,sasl_report_tty_h,si,si_sasl_supp,systools,
          systools_lib,systools_make,systools_rc,systools_relup]},
     {path,["$ROOT/lib/crypto-3.4.2/ebin"]},
     {primLoad,[crypto,crypto_ec_curves]},
     {path,["$ROOT/lib/ranch-0.9.0/ebin"]},
     {primLoad,
         [ranch,ranch_acceptor,ranch_acceptors_sup,ranch_app,ranch_conns_sup,
          ranch_listener_sup,ranch_protocol,ranch_server,ranch_ssl,ranch_sup,
          ranch_tcp,ranch_transport]},
     {path,["$ROOT/lib/cowlib-0.4.0/ebin"]},
     {primLoad,[cow_cookie,cow_date,cow_http,cow_mimetypes,cow_qs,cow_spdy]},
     {path,["$ROOT/lib/cowboy-0.9.0/ebin"]},
     {primLoad,
         [cowboy,cowboy_app,cowboy_bstr,cowboy_client,cowboy_clock,
          cowboy_handler,cowboy_http,cowboy_http_handler,cowboy_loop_handler,
          cowboy_middleware,cowboy_multipart,cowboy_protocol,cowboy_req,
          cowboy_rest,cowboy_router,cowboy_spdy,cowboy_static,
          cowboy_sub_protocol,cowboy_sup,cowboy_websocket,
          cowboy_websocket_handler]},
     {path,["$ROOT/lib/compiler-5.0.3/ebin"]},
     {primLoad,
         [beam_a,beam_asm,beam_block,beam_bool,beam_bsm,beam_clean,beam_dead,
          beam_dict,beam_disasm,beam_except,beam_flatten,beam_jump,
          beam_listing,beam_opcodes,beam_peep,beam_receive,beam_split,
          beam_trim,beam_type,beam_utils,beam_validator,beam_z,cerl,
          cerl_clauses,cerl_inline,cerl_trees,compile,core_lib,core_lint,
          core_parse,core_pp,core_scan,erl_bifs,rec_env,sys_core_dsetel,
          sys_core_fold,sys_core_inline,sys_pre_attributes,sys_pre_expand,
          v3_codegen,v3_core,v3_kernel,v3_kernel_pp,v3_life]},
     {path,["$ROOT/lib/syntax_tools-1.6.17/ebin"]},
     {primLoad,
         [epp_dodger,erl_comment_scan,erl_prettypr,erl_recomment,erl_syntax,
          erl_syntax_lib,erl_tidy,igor,prettypr]},
     {path,["$ROOT/lib/goldrush-0.1.6/ebin"]},
     {primLoad,
         [glc,glc_code,glc_lib,glc_ops,gr_app,gr_context,gr_counter,
          gr_counter_sup,gr_manager,gr_manager_sup,gr_param,gr_param_sup,
          gr_sup,gre]},
     {path,["$ROOT/lib/lager-2.1.1/ebin"]},
     {primLoad,
         [error_logger_lager_h,lager,lager_app,lager_backend_throttle,
          lager_common_test_backend,lager_config,lager_console_backend,
          lager_crash_log,lager_default_formatter,lager_file_backend,
          lager_format,lager_handler_watcher,lager_handler_watcher_sup,
          lager_msg,lager_stdlib,lager_sup,lager_transform,lager_trunc_io,
          lager_util]},
     {path,["$ROOT/lib/jiffy-0.13.3-1-gf92793a/ebin"]},
     {primLoad,[jiffy,jiffy_utf8]},
     {path,["$ROOT/lib/ibot_core-1/ebin"]},
     {primLoad,
         [ibot_core_app,ibot_core_cmd,ibot_core_cmd_cdir,ibot_core_env,
          ibot_core_func_cmd,ibot_core_func_cmd_cdir,
          ibot_core_srv_compile_nodes,ibot_core_srv_project_info_loader,
          ibot_core_sup]},
     {path,["$ROOT/lib/ibot_db-1/ebin"]},
     {primLoad,
         [ibot_db_app,ibot_db_func,ibot_db_func_config,ibot_db_func_services,
          ibot_db_func_topics,ibot_db_srv,ibot_db_sup]},
     {path,["$ROOT/lib/ibot_generator-1/ebin"]},
     {primLoad,[ibot_generator_app,ibot_generator_msg_srv,ibot_generator_sup]},
     {path,["$ROOT/lib/ibot_webi-1/ebin"]},
     {primLoad,[ibot_webi_app,ibot_webi_handler,ibot_webi_sup,tw,webserver]},
     {path,["$ROOT/lib/ibot_nodes-1/ebin"]},
     {primLoad,
         [ibot_nodes_app,ibot_nodes_srv_connector,ibot_nodes_srv_monitor,
          ibot_nodes_srv_registrator,ibot_nodes_srv_service,
          ibot_nodes_srv_topic,ibot_nodes_sup,pingpong,r]},
     {path,["$ROOT/lib/ibot_events-1/ebin"]},
     {primLoad,[ibot_events_app,ibot_events_evs,ibot_events_sup,test]},
     {path,["$ROOT/lib/ibot_ri-1/ebin"]},
     {primLoad,[ibot_ri_app,ibot_ri_srv_distribute,ibot_ri_sup,t]},
     {progress,modules_loaded},
     {path,
         ["$ROOT/lib/kernel-3.1/ebin","$ROOT/lib/stdlib-2.3/ebin",
          "$ROOT/lib/sasl-2.4.1/ebin","$ROOT/lib/crypto-3.4.2/ebin",
          "$ROOT/lib/ranch-0.9.0/ebin","$ROOT/lib/cowlib-0.4.0/ebin",
          "$ROOT/lib/cowboy-0.9.0/ebin","$ROOT/lib/compiler-5.0.3/ebin",
          "$ROOT/lib/syntax_tools-1.6.17/ebin",
          "$ROOT/lib/goldrush-0.1.6/ebin","$ROOT/lib/lager-2.1.1/ebin",
          "$ROOT/lib/jiffy-0.13.3-1-gf92793a/ebin",
          "$ROOT/lib/ibot_core-1/ebin","$ROOT/lib/ibot_db-1/ebin",
          "$ROOT/lib/ibot_generator-1/ebin","$ROOT/lib/ibot_webi-1/ebin",
          "$ROOT/lib/ibot_nodes-1/ebin","$ROOT/lib/ibot_events-1/ebin",
          "$ROOT/lib/ibot_ri-1/ebin"]},
     {kernelProcess,heart,{heart,start,[]}},
     {kernelProcess,error_logger,{error_logger,start_link,[]}},
     {kernelProcess,application_controller,
         {application_controller,start,
             [{application,kernel,
                  [{description,"ERTS  CXC 138 10"},
                   {vsn,"3.1"},
                   {id,[]},
                   {modules,
                       [application,application_controller,application_master,
                        application_starter,auth,code,code_server,dist_util,
                        erl_boot_server,erl_distribution,erl_reply,
                        error_handler,error_logger,file,file_server,
                        file_io_server,global,global_group,global_search,
                        group,heart,hipe_unified_loader,inet6_tcp,
                        inet6_tcp_dist,inet6_udp,inet6_sctp,inet_config,
                        inet_hosts,inet_gethost_native,inet_tcp_dist,kernel,
                        kernel_config,net,net_adm,net_kernel,os,ram_file,rpc,
                        user,user_drv,user_sup,disk_log,disk_log_1,
                        disk_log_server,disk_log_sup,dist_ac,erl_ddll,
                        erl_epmd,erts_debug,gen_tcp,gen_udp,gen_sctp,inet,
                        inet_db,inet_dns,inet_parse,inet_res,inet_tcp,
                        inet_udp,inet_sctp,pg2,seq_trace,standard_error,
                        wrap_log_reader]},
                   {registered,
                       [application_controller,erl_reply,auth,boot_server,
                        code_server,disk_log_server,disk_log_sup,
                        erl_prim_loader,error_logger,file_server_2,
                        fixtable_server,global_group,global_name_server,heart,
                        init,kernel_config,kernel_sup,net_kernel,net_sup,rex,
                        user,os_server,ddll_server,erl_epmd,inet_db,pg2]},
                   {applications,[]},
                   {included_applications,[]},
                   {env,[{error_logger,tty}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{kernel,[]}}]}]}},
     {progress,init_kernel_started},
     {apply,
         {application,load,
             [{application,stdlib,
                  [{description,"ERTS  CXC 138 10"},
                   {vsn,"2.3"},
                   {id,[]},
                   {modules,
                       [array,base64,beam_lib,binary,c,calendar,dets,
                        dets_server,dets_sup,dets_utils,dets_v8,dets_v9,dict,
                        digraph,digraph_utils,edlin,edlin_expand,epp,
                        eval_bits,erl_bits,erl_compile,erl_eval,
                        erl_expand_records,erl_internal,erl_lint,erl_parse,
                        erl_posix_msg,erl_pp,erl_scan,erl_tar,
                        error_logger_file_h,error_logger_tty_h,escript,ets,
                        file_sorter,filelib,filename,gb_trees,gb_sets,gen,
                        gen_event,gen_fsm,gen_server,io,io_lib,io_lib_format,
                        io_lib_fread,io_lib_pretty,lib,lists,log_mf_h,maps,
                        math,ms_transform,orddict,ordsets,otp_internal,pg,
                        pool,proc_lib,proplists,qlc,qlc_pt,queue,random,re,
                        sets,shell,shell_default,slave,sofs,string,supervisor,
                        supervisor_bridge,sys,timer,unicode,win32reg,zip]},
                   {registered,
                       [timer_server,rsh_starter,take_over_monitor,
                        pool_master,dets]},
                   {applications,[kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,sasl,
                  [{description,"SASL  CXC 138 11"},
                   {vsn,"2.4.1"},
                   {id,[]},
                   {modules,
                       [sasl,alarm_handler,format_lib_supp,misc_supp,overload,
                        rb,rb_format_supp,release_handler,release_handler_1,
                        erlsrv,sasl_report,sasl_report_tty_h,
                        sasl_report_file_h,si,si_sasl_supp,systools,
                        systools_make,systools_rc,systools_relup,
                        systools_lib]},
                   {registered,
                       [sasl_sup,alarm_handler,overload,release_handler]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[{sasl_error_logger,tty},{errlog_type,all}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{sasl,[]}}]}]}},
     {apply,
         {application,load,
             [{application,crypto,
                  [{description,"CRYPTO"},
                   {vsn,"3.4.2"},
                   {id,[]},
                   {modules,[crypto,crypto_ec_curves]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,ranch,
                  [{description,"Socket acceptor pool for TCP protocols."},
                   {vsn,"0.9.0"},
                   {id,[]},
                   {modules,
                       [ranch,ranch_acceptor,ranch_acceptors_sup,ranch_app,
                        ranch_conns_sup,ranch_listener_sup,ranch_protocol,
                        ranch_server,ranch_ssl,ranch_sup,ranch_tcp,
                        ranch_transport]},
                   {registered,[ranch_sup,ranch_server]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{ranch_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,cowlib,
                  [{description,
                       "Support library for manipulating Web protocols."},
                   {vsn,"0.4.0"},
                   {id,[]},
                   {modules,
                       [cow_cookie,cow_date,cow_http,cow_mimetypes,cow_qs,
                        cow_spdy]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,cowboy,
                  [{description,"Small, fast, modular HTTP server."},
                   {vsn,"0.9.0"},
                   {id,[]},
                   {modules,
                       [cowboy,cowboy_app,cowboy_bstr,cowboy_client,
                        cowboy_clock,cowboy_handler,cowboy_http,
                        cowboy_http_handler,cowboy_loop_handler,
                        cowboy_middleware,cowboy_multipart,cowboy_protocol,
                        cowboy_req,cowboy_rest,cowboy_router,cowboy_spdy,
                        cowboy_static,cowboy_sub_protocol,cowboy_sup,
                        cowboy_websocket,cowboy_websocket_handler]},
                   {registered,[cowboy_clock,cowboy_sup]},
                   {applications,[kernel,stdlib,crypto,ranch,cowlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{cowboy_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,compiler,
                  [{description,"ERTS  CXC 138 10"},
                   {vsn,"5.0.3"},
                   {id,[]},
                   {modules,
                       [beam_a,beam_asm,beam_block,beam_bool,beam_bsm,
                        beam_clean,beam_dead,beam_dict,beam_disasm,
                        beam_except,beam_flatten,beam_jump,beam_listing,
                        beam_opcodes,beam_peep,beam_receive,beam_split,
                        beam_trim,beam_type,beam_utils,beam_validator,beam_z,
                        cerl,cerl_clauses,cerl_inline,cerl_trees,compile,
                        core_scan,core_lint,core_parse,core_pp,core_lib,
                        erl_bifs,rec_env,sys_core_dsetel,sys_core_fold,
                        sys_core_inline,sys_pre_attributes,sys_pre_expand,
                        v3_codegen,v3_core,v3_kernel,v3_kernel_pp,v3_life]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,syntax_tools,
                  [{description,"Syntax tools"},
                   {vsn,"1.6.17"},
                   {id,[]},
                   {modules,
                       [epp_dodger,erl_comment_scan,erl_prettypr,
                        erl_recomment,erl_syntax,erl_syntax_lib,erl_tidy,igor,
                        prettypr]},
                   {registered,[]},
                   {applications,[stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,goldrush,
                  [{description,"Erlang event stream processor"},
                   {vsn,"0.1.6"},
                   {id,[]},
                   {modules,
                       [glc,glc_code,glc_lib,glc_ops,gr_app,gr_context,
                        gr_counter,gr_counter_sup,gr_manager,gr_manager_sup,
                        gr_param,gr_param_sup,gr_sup,gre]},
                   {registered,[]},
                   {applications,[kernel,stdlib,compiler,syntax_tools]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{gr_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,lager,
                  [{description,"Erlang logging framework"},
                   {vsn,"2.1.1"},
                   {id,[]},
                   {modules,
                       [error_logger_lager_h,lager,lager_app,
                        lager_backend_throttle,lager_common_test_backend,
                        lager_config,lager_console_backend,lager_crash_log,
                        lager_default_formatter,lager_file_backend,
                        lager_format,lager_handler_watcher,
                        lager_handler_watcher_sup,lager_msg,lager_stdlib,
                        lager_sup,lager_transform,lager_trunc_io,lager_util]},
                   {registered,
                       [lager_sup,lager_event,lager_crash_log,
                        lager_handler_watcher_sup]},
                   {applications,[kernel,stdlib,goldrush]},
                   {included_applications,[]},
                   {env,
                       [{colored,false},
                        {colors,
                            [{debug,"\e[0;38m"},
                             {info,"\e[1;37m"},
                             {notice,"\e[1;36m"},
                             {warning,"\e[1;33m"},
                             {error,"\e[1;31m"},
                             {critical,"\e[1;35m"},
                             {alert,"\e[1;44m"},
                             {emergency,"\e[1;41m"}]},
                        {crash_log,"log/crash.log"},
                        {crash_log_msg_size,65536},
                        {crash_log_size,10485760},
                        {crash_log_date,"$D0"},
                        {crash_log_count,5},
                        {error_logger_redirect,true},
                        {error_logger_hwm,50},
                        {async_threshold,20},
                        {async_threshold_window,5}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{lager_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,jiffy,
                  [{description,"JSON Decoder/Encoder."},
                   {vsn,"0.13.3-1-gf92793a"},
                   {id,[]},
                   {modules,[jiffy,jiffy_utf8]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,ibot_core,
                  [{description,"iBotOS core module"},
                   {vsn,"1"},
                   {id,[]},
                   {modules,
                       [ibot_core_app,ibot_core_cmd,ibot_core_cmd_cdir,
                        ibot_core_env,ibot_core_func_cmd,
                        ibot_core_func_cmd_cdir,ibot_core_srv_compile_nodes,
                        ibot_core_srv_project_info_loader,ibot_core_sup]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{ibot_core_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,ibot_db,
                  [{description,[]},
                   {vsn,"1"},
                   {id,[]},
                   {modules,
                       [ibot_db_app,ibot_db_func,ibot_db_func_config,
                        ibot_db_func_services,ibot_db_func_topics,ibot_db_srv,
                        ibot_db_sup]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{ibot_db_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,ibot_generator,
                  [{description,"iBotOS generator module"},
                   {vsn,"1"},
                   {id,[]},
                   {modules,
                       [ibot_generator_app,ibot_generator_msg_srv,
                        ibot_generator_sup]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{ibot_generator_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,ibot_webi,
                  [{description,[]},
                   {vsn,"1"},
                   {id,[]},
                   {modules,
                       [ibot_webi_app,ibot_webi_handler,ibot_webi_sup,tw,
                        webserver]},
                   {registered,[]},
                   {applications,
                       [kernel,stdlib,crypto,cowboy,lager,compiler,
                        syntax_tools]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{ibot_webi_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,ibot_nodes,
                  [{description,[]},
                   {vsn,"1"},
                   {id,[]},
                   {modules,
                       [ibot_nodes_app,ibot_nodes_srv_connector,
                        ibot_nodes_srv_monitor,ibot_nodes_srv_registrator,
                        ibot_nodes_srv_service,ibot_nodes_srv_topic,
                        ibot_nodes_sup,pingpong,r]},
                   {registered,[]},
                   {applications,[kernel,stdlib,ibot_db]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{ibot_nodes_app,[ibot_nodes_srv_connector]}}]}]}},
     {apply,
         {application,load,
             [{application,ibot_events,
                  [{description,[]},
                   {vsn,"1"},
                   {id,[]},
                   {modules,
                       [ibot_events_app,ibot_events_evs,ibot_events_sup,test]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{ibot_events_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,ibot_ri,
                  [{description,[]},
                   {vsn,"1"},
                   {id,[]},
                   {modules,
                       [ibot_ri_app,ibot_ri_srv_distribute,ibot_ri_sup,t]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{ibot_ri_app,[]}}]}]}},
     {progress,applications_loaded},
     {apply,{application,start_boot,[kernel,permanent]}},
     {apply,{application,start_boot,[stdlib,permanent]}},
     {apply,{application,start_boot,[sasl,permanent]}},
     {apply,{application,start_boot,[crypto,permanent]}},
     {apply,{application,start_boot,[ranch,permanent]}},
     {apply,{application,start_boot,[cowlib,permanent]}},
     {apply,{application,start_boot,[cowboy,permanent]}},
     {apply,{application,start_boot,[compiler,permanent]}},
     {apply,{application,start_boot,[syntax_tools,permanent]}},
     {apply,{application,start_boot,[goldrush,permanent]}},
     {apply,{application,start_boot,[lager,permanent]}},
     {apply,{application,start_boot,[jiffy,permanent]}},
     {apply,{application,start_boot,[ibot_core,permanent]}},
     {apply,{application,start_boot,[ibot_db,permanent]}},
     {apply,{application,start_boot,[ibot_generator,permanent]}},
     {apply,{application,start_boot,[ibot_webi,permanent]}},
     {apply,{application,start_boot,[ibot_nodes,permanent]}},
     {apply,{c,erlangrc,[]}},
     {progress,started}]}.

