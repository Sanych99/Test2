Реализовано:
	Структура проекта:
	- Ядро системы. Концентрирует в себе логику управления проектом и взаимодействия узлов между собой.
	- Узлы. Небольшая программа, написанная на языках Java, Python (в скором времени появится поддержка С++). Представляет собой приложение для управления некоторой, отдельно взятой, функицей автоматизированной системы / робота. Представленны в виде отдельных процессов в ОС, что позволяет выполняться им независимо друг от друга

	Возможности ядра системы:
	- Выполнение на ОС Linux (разрабатывается на Ubuntu), Windows
	- Абстрагирован от используемого "железа".
	- Возможность создания иерархических приложений. Можно легко объеденить несколько различных проектов в один либо установить между ними связь для обмена данными и использования функций друг друга
	- Возможность создания РАСПРЕДЕЛЕННЫХ приложений. Запуск проекта на нескольких машинах, где на каждой машине будут выполняться указанные узлы, при этом система будет работать так же, как если бы она работала на одной машине. Это позволяет увеличить вычислительные мощьности при необходимости.
	- Создание РАСПРЕДЕЛЕННОЙ БД при использовании запуска РАСПРЕДЕЛЕННОГО приложения.
	- Горячая замена выполняемых узлов. Файлы ядра можно заменять во время выполнения. Остановка оборудования не требуется.
	- Все настройки проекта хранятся в БД
	- Есть 2 состояния проекта release и develop. release запускат проект и соединяется с распраделенными машинами автоматически.
	- Позволяет использовать ЛЮБЫЕ внешние инфтрументы и библиотеки в коде узлов.
	- Проект может состоять из множества узлов, написанных на разных языках, в зависимости от целесообразности использования.	

	#Фцнкции относящиеся к работе с узлами:
	- Считывание конфиг файлов ядра, проекта, узлов
	- Запуск / остановка узлов.
	- Мониторинг узлов. Ядро востанавливает узел после падения если за узлом установлен мониторинг. Мониторинг за узлом инициируется в коде узла. Вызовом функции MonitorStart().
	- Обмен сообщениями мужду узлами
	- Создание в вызов сервисных методов предоставляемых узлами.

	Инструментарий разработчика:
	- Генерация объектов сообщений для события и ообъектов для запроса и ответа сервиса
	- Создаение нового проекта
	- Создание нового узла
	- Просмотр узлов проекта
	- Компиляция узлов проекта
	- Запуск / остановка узлов проекта

	Система событий (подписка на сообщения):
	- Подписка на полуение сообщения слушателями
	- Публикация сообщения узлом
	- Получение и отправка сообщений от / до UI окна упраления.

	Система сервисов
	- Создание методов в узлах в качестве сервиса получаюшего запрос и продоставляющего ответ
	- Регистрация сервисных методов для использования
	- Вызов сервиса клиентом
	- Обработка запроса сервисным методом
	- Отправка ответа клиенту
	- Обработка клиентом ответа от сервиса

	Библиотеки
	- JLib - java библиотека для создания узлов системы на языке java.
	- PLib - python библиотека для создания узлов системы на языке python
	- JS_UI_Interaction_Lib - javascript библиотека для создания UI управления / обмена данными с узлами ропекта. Применяется для создания пользовательских web интерфейсов на основе html и javascript.





Необходимо доработать / Реализовать:
	Ядро:
	- Запуск мониторинга узла. Дать возможность прописывать запуск монитора за узлов в конфиг файле узла
	- Компиляция Java проектов созданых на основе Maven
	- Создать библиотеку для использования языка С++
